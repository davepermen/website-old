@page "{Slug?}"
@model Homepage.Pages.BlogModel

@using Homepage
@using Markdig
@using System.Text.RegularExpressions

@functions {
    static MarkdownPipeline pipeline = new MarkdownPipelineBuilder().UseYamlFrontMatter().Build();

    static string AddSections(string html)
    {
        // yes. yes it works. no, i won't comment.
        return Regex.Replace(html.Replace("<p>", "<section><p>").Replace("</p>", "</p></section>"), @"</section>\s+<section>", "");
    }
}
@{
    Layout = "_Layout";
    var slug = RouteData.Values["Slug"] as string;
    var blog = default(string);
    if (slug != null)
    {
        var path = $@"{Program.DataRoot}\blog\{slug}\index.md";
        if (System.IO.File.Exists(path))
        {
            var markdown = await System.IO.File.ReadAllTextAsync(path);
            blog = Markdig.Markdown.ToHtml(markdown, pipeline);

            var hero = $"/blog/{slug}/hero.jpg";

            blog = AddSections(blog.ReplaceFirst("<h1>", $"<h1 style=\"background-image: url('{hero}')\">"));
        }
        else
        {
            blog = "404";
        }
    }
}

@if (blog != null)
{
    <section blog>
        <article>
            <section>
                @Html.Raw(blog)
            </section>
        </article>
    </section>
}
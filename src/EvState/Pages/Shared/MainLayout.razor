@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@*@inject HttpContent HttpContext*@

<AuthorizeView>
    <Authorized>
        @Body
    </Authorized>
    <NotAuthorized>
        @Body
        @*<EditForm Model="loginParameters" OnValidSubmit="OnSubmit" Context="another_name">
            <InputText id="inputUsername" @bind-Value="loginParameters.UserName" autofocus placeholder="Username" />
            <InputText type="password" id="inputPassword" placeholder="Password" @bind-Value="loginParameters.Password" />
            <button type="submit">Sign in</button>
            @if (triedLoggingIn)
            {
                <p>tried logging in</p>
            }
        </EditForm>*@
    </NotAuthorized>
</AuthorizeView>

@code {
    LoginParameters loginParameters = new LoginParameters();

    bool triedLoggingIn = false;


    public class LoginParameters
    {
        public string UserName { get; set; }
        public string Password { get; set; }
    }


    async Task OnSubmit()
    {
        try
        {
            //        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

            //var user = await _userManager.FindByNameAsync(loginParameters.UserName);

            //if (user == null) return BadRequest("User does not exist");

            //var singInResult = await _signInManager.CheckPasswordSignInAsync(user, loginParameters.Password, false);

            //if (!singInResult.Succeeded) return BadRequest("Invalid password");


            //HttpContext.Sign

            //await _signInManager.SignInAsync(user, true);
        }
        catch (Exception ex)
        {
        }
    }
}